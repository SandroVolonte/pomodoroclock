{"version":3,"sources":["forest.mp3","fonts/digital-7.ttf","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","SetTimers","props","id","value","onClick","handleChangeBreak","icon","faArrowDown","size","breakLength","faArrowUp","handleChangeSession","sessionLength","TimeDisplay","currentMode","currentMinutes","currentSeconds","Toolbar","handleStartStopToggle","running","faPause","faPlay","handleReset","faSyncAlt","PomodoroClock","state","currentTimer","bind","tick","handleTransition","handleSetInterval","handleTransitionPause","event","newBreak","this","parseInt","currentTarget","NaN","setState","Object","assign","forceUpdate","newSession","document","getElementById","play","toString","setTimeout","newTimer","newMins","Math","floor","newSeconds","interval","setInterval","control","beep","pause","currentTime","clearInterval","src","forest","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c90fe035.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forest.31393b87.mp3\";","module.exports = __webpack_public_path__ + \"static/media/digital-7.1e670d88.ttf\";","import React from 'react';\r\nimport forest from \"./forest.mp3\";\r\nimport './App.css';\r\nimport {faSyncAlt} from \"@fortawesome/free-solid-svg-icons/faSyncAlt\";\r\nimport {faPlay} from \"@fortawesome/free-solid-svg-icons/faPlay\";\r\nimport {faArrowUp} from \"@fortawesome/free-solid-svg-icons/faArrowUp\";\r\nimport {faArrowDown} from \"@fortawesome/free-solid-svg-icons/faArrowDown\";\r\nimport {faPause} from \"@fortawesome/free-solid-svg-icons/faPause\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./fonts/digital-7.ttf\"\r\n\r\n\r\n\r\nconst Header = () =>{\r\n  return (\r\n      <div className={\"row justify-content-center\"}>\r\n        <div className={\"col-5\"}>\r\n          <header className={\"Title\"}>\r\n            PomodoroClock, work more efficiently!\r\n          </header>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst SetTimers = (props) => {\r\n    return (\r\n        <div className={\"row justify-content-center\"}>\r\n            <div className={\"col-4 Setter\"}>\r\n                <div id={\"break-label\"}>\r\n                    <h2 className={\"LengthHeader\"}>\r\n                        Break-Length\r\n                    </h2>\r\n                    <div id={\"break-length\"} className={\"Lengthwrapper\"}>\r\n                        <button className={\"btnChange\"} id={\"break-decrement\"} value={-1} onClick={props.handleChangeBreak}>\r\n                            <FontAwesomeIcon className={\"Icons\"} icon={faArrowDown} size={\"lg\"}/>\r\n                        </button>\r\n                        <text id={\"break-length\"}>{props.breakLength}</text>\r\n                        <button className={\"btnChange\"} id={\"break-increment\"} value={1} onClick={props.handleChangeBreak}>\r\n                            <FontAwesomeIcon className={\"Icons\"} icon={faArrowUp} size={\"lg\"}/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={\"col-4 Setter\"}>\r\n                <div id={\"session-label\"}>\r\n                    <h2 className={\"LengthHeader\"}>\r\n                        Session-Length\r\n                    </h2>\r\n                    <div className={\"Lengthwrapper\"}>\r\n                        <button className={\"btnChange\"} id={\"session-decrement\"} value={-1} onClick={props.handleChangeSession}>\r\n                        <FontAwesomeIcon className={\"Icons\"}  icon={faArrowDown} size={\"lg\"}/>\r\n                        </button>\r\n                        <text id={\"session-length\"}>{props.sessionLength}</text>\r\n                        <button className={\"btnChange\"} id={\"session-increment\"} value={1} onClick={props.handleChangeSession}>\r\n                        <FontAwesomeIcon className={\"Icons\"} icon={faArrowUp} size={\"lg\"}/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeDisplay = (props) => {\r\n    return(\r\n        <div className={\"row justify-content-center Display\"}>\r\n            <div className={\"col-3 DisplayCol\"}>\r\n                <h2 id={\"timer-label\"}>{props.currentMode}</h2>\r\n                <h1 id={\"time-left\"}>{props.currentMinutes}:{props.currentSeconds}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <div className={\"row justify-content-center Toolbar\"}>\r\n            <div className={\"col-3 ToolbarCol\"}>\r\n\r\n                <button className={\"btnChange\"} id={\"start_stop\"} onClick={props.handleStartStopToggle}>\r\n                    {(props.running === \"ON\") ? <FontAwesomeIcon className={\"Icons\"} icon={faPause} size={\"lg\"}/> : <FontAwesomeIcon className={\"Icons\"} icon={faPlay} size={\"lg\"}/>}\r\n                </button>\r\n\r\n                <button className={\"btnChange\"} id={\"reset\"} onClick={props.handleReset}>\r\n                    <FontAwesomeIcon className={\"Icons\"} icon={faSyncAlt} size={\"lg\"}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass PomodoroClock extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        sessionLength: 25,\r\n        breakLength: 5,\r\n        currentMinutes: 25,\r\n        currentSeconds: \"00\",\r\n        currentTimer: 25 * 60,\r\n        currentMode: \"Session\",\r\n        running: \"OFF\",\r\n    };\r\n    this.handleChangeBreak = this.handleChangeBreak.bind(this);\r\n    this.handleChangeSession = this.handleChangeSession.bind(this);\r\n    this.handleStartStopToggle = this.handleStartStopToggle.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.tick = this.tick.bind(this);\r\n    this.handleTransition = this.handleTransition.bind(this);\r\n    this.handleSetInterval = this.handleSetInterval.bind(this);\r\n    this.handleTransitionPause = this.handleTransitionPause.bind(this);\r\n\r\n  }\r\n\r\n    handleChangeBreak(event){\r\n        let newBreak = this.state.breakLength + parseInt(event.currentTarget.value);\r\n        if(newBreak > 0 && newBreak <= 60 && (this.state.running === \"OFF\")){\r\n            this.setState(state => {\r\n                Object.assign(this.state, {breakLength: newBreak})\r\n            });\r\n            this.forceUpdate();\r\n        }\r\n        else{\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    handleChangeSession(event){\r\n        let newSession = this.state.sessionLength + parseInt(event.currentTarget.value);\r\n        if(newSession > 0 && newSession <= 60 && (this.state.running === \"OFF\")){\r\n            this.setState(state => {\r\n                Object.assign(this.state, {sessionLength: newSession, currentTimer : newSession * 60},\r\n                    {currentMinutes: newSession})\r\n            });\r\n            this.forceUpdate();\r\n        }\r\n        else{\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    handleTransition(){\r\n        document.getElementById(\"beep\").play();\r\n        if(this.state.currentMode === \"Session\"){\r\n            this.setState(state => {\r\n                Object.assign(this.state, {currentMode : \"Break\",\r\n                    currentMinutes: state.breakLength < 10 ? \"0\" + state.breakLength.toString() : state.breakLength,\r\n                    currentSeconds: \"00\",\r\n                    currentTimer: state.breakLength * 60,\r\n                    running: \"PAUSE\"})\r\n            });\r\n            this.forceUpdate();\r\n            setTimeout(this.handleTransitionPause, 2000)\r\n        }\r\n        else{\r\n            this.setState(state => {\r\n                Object.assign(this.state, {currentMode: \"Session\",\r\n                    currentMinutes: state.sessionLength < 10 ? \"0\" + state.sessionLength.toString() : state.sessionLength,\r\n                    currentSeconds: \"00\",\r\n                    currentTimer: state.sessionLength * 60,\r\n                    running: \"PAUSE\"})\r\n            });\r\n            this.forceUpdate();\r\n            setTimeout(this.handleTransitionPause, 2000)\r\n        }\r\n    }\r\n\r\n\r\n    handleTransitionPause () {\r\n        this.setState(state => {Object.assign(this.state, {running: \"ON\"})})\r\n    }\r\n\r\n    tick(){\r\n\r\n      if((this.state.running === \"ON\" && this.state.currentTimer > 0)){\r\n        let newTimer = this.state.currentTimer - 1;\r\n        let newMins = Math.floor(newTimer / 60);\r\n        let newSeconds = newTimer - newMins * 60;\r\n        this.setState(state => {\r\n            Object.assign(this.state, {currentTimer : newTimer,\r\n                    currentMinutes: (newMins > 9) ? (newMins) : (\"0\" + newMins.toString()),\r\n                    currentSeconds: (newSeconds > 9) ? (newSeconds) : (\"0\" + newSeconds.toString())})\r\n        });\r\n        if(newTimer === 0){\r\n            setTimeout(this.handleTransition, 500);\r\n        }\r\n        this.forceUpdate();\r\n      }\r\n      else{\r\n      }\r\n    }\r\n\r\n\r\n    handleSetInterval(){\r\n        this.interval = setInterval(this.tick, 1000);\r\n    }\r\n\r\n\r\n    handleStartStopToggle() {\r\n      let control = this.state.running;\r\n        (this.state.running === \"ON\") ?\r\n            (this.setState(Object.assign(this.state, {running:\"PAUSE\"}))) :\r\n            (this.setState(Object.assign(this.state, {running: \"ON\"})));\r\n        if(control === \"OFF\"){\r\n            setTimeout(this.handleSetInterval, 500)\r\n        }\r\n    }\r\n\r\n    handleReset(){\r\n      let beep = document.getElementById(\"beep\");\r\n      beep.pause();\r\n      beep.currentTime=0;\r\n      clearInterval(this.interval);\r\n      this.setState({\r\n          sessionLength: 25,\r\n          breakLength: 5,\r\n          currentMinutes: 25,\r\n          currentSeconds: \"00\",\r\n          currentTimer: 25 * 60,\r\n          currentMode: \"Session\",\r\n          running: \"OFF\"\r\n      });\r\n    }\r\n\r\n  render(){\r\n    return(\r\n        <div className={\"wrapper row align-items-center justify-content-center\"}>\r\n          <div className={\"col\"}>\r\n              <div className={\"watchwrapper\"}>\r\n\r\n            <Header/>\r\n            <br/>\r\n            <SetTimers\r\n                handleChangeSession={this.handleChangeSession}\r\n                handleChangeBreak={this.handleChangeBreak}\r\n                breakLength={this.state.breakLength}\r\n                sessionLength={this.state.sessionLength}\r\n            />\r\n            <br/>\r\n            <br/>\r\n            <TimeDisplay\r\n                currentMode={this.state.currentMode}\r\n                currentMinutes={this.state.currentMinutes}\r\n                currentSeconds={this.state.currentSeconds}\r\n            />\r\n            <br/>\r\n            <Toolbar\r\n                handleStartStopToggle={this.handleStartStopToggle}\r\n                handleReset={this.handleReset}\r\n                running={this.state.running}\r\n            />\r\n\r\n            <audio id={\"beep\"} src={forest}/>\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default PomodoroClock;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport PomodoroClock from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PomodoroClock />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}